Security grp
Http ,https,custom tcp (8000-9000),rds,ssh,mysql aurora, all trafic


1)Creation of VPC.


Create VPC
Create 3 subnets in 3 different zones
Create IG attach VPC
Create Route Table 
Edit Subnet Associations -> Attach all subnets
Edit Routes -> 0.0.0.0/0 Target  IG created
Create Security Group, Edit and add Inbound rules


2)Linux server implementation using (php).


sudo -i
yum install httpd php php-mysql
service httpd start
cd /var/www/html
vim test.php


+i


<?php
$x = "Hello world!";
$y = 'Hello world!';


echo $x;
echo "<br>";
echo $y;
?>


Esc + :wq (To escape from the editor)








3)Ubuntu server implementation (R program)


sudo apt-get dist-upgrade
sudo apt-get upgrade


sudo su
echo "deb http://cran.rstudio.com/bin/linux/ubuntu trusty/" >> /etc/apt/sources.list
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9
apt-get update
apt-get install r-base


R // This is for R command prompt)


message <-"Hello World!"
print(message)  




q() //to quit
4)Windows server implementation with (C program)
Install code blocks >binary release >4th link source forge>and run normal c program
6)Launching website using S3 Bucket


Create IAM user and attach admin full access and S3 full access policies to it
Login though IAM 
Create bucket
Upload html file, give public access
Copy file URL on browser






AMI:
Instance- actions- image and templates-create image
name and create image
Go to ami the select the created image from launch the instance
Select quick start
Then same procedure as linux
Normal Load Balancer 
Create 2 linux server which should be running and both should  be running at different subnet and run php program in instrances
Load Balancer
Create classic load  balancer - create- load balancer protocol tcp
Select atleast 2 subnets under available subnets from different zone
Next assign security grp
        Select existing security grp
Configure security settings 
Configure health check
        Protocol- tcp
        Res timeout -2
                        5
                        2
                        10
                        
        


Add ec2 instance
        Add instances
Add tags anyting
Review and create




Normal Autoscaling  and autoscaling with load balancer
First create a linux instance and a ami which should be running
Go to autoscaling
Launch configuration
Create launch template
Name of the template
Provide guidance -click
Quick start- aws linux
Instance type t2 micro free tier
Key pair selection
Subnet -dont include
Select security group
Click Create launch template


Create launch configure
Launch configuration name
Ami selection
Instance type- t2 micro


Security grp Rules- all traffic -anywhere
Key pair-proceed without keypair
I ack…
Click launch config


Now go to autoscaling group
Create autoscaling grp- name
Launch template (select the created template)
Next
Network -select vpc-select 2 subnet (a and b zone)
Create new target grp
Next
No load balancer(for only autoscaling)
For autoscaling with load balncer(choose- create a new loadbalancer )
Next
Group size
2
1
3
Scaling policies
Select Target tracking scaling policy
Avg cpu utiliztion
Target value =90
Skip to the review and 
Next 
Next
create autoscaling grp
















For RDS creation :
Go to VPC and go  to actions edit vpc settings-> enable DNS in actions
Create security group in ec2
In RDS
* Create a subnet group
* Parameter group create parameters 
* mysql 8.0 [group family] type - DB parameter Group.
* * Group name & description 
*  Create


3) click on created group. Edit parameters (check utf 8]


* Character-set-client->
* * character-set-Connection
* * Character-set. database. 
* character-set- server
* * character-set - results. 
* Save changes
* linux:
1.sudo -i
yum install httpd
service httpd start
yum install php php-mysql
service httpd restart
yum update


Create a page to test your PHP installation:
cd /var/www/html
vi test.php


<?php
$servername = "database-1.cwarrkrwzrbl.ap-south-1.rds.amazonaws.com"; 
$username = "admin";
$password = "admin123";
$dbname = "new";


// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);
// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
} 
$sql = "SELECT id, name FROM new.table";
$result = $conn->query($sql);


if ($result->num_rows> 0) {
    // output data of each row
    while($row = $result->fetch_assoc()) {
        echo "id = : " . $row["id"]. " - NAME   is : " . $row["name"]. "<br>";
    }
} else {
    echo "0 results";
}
$conn->close();
?>


Type :wq to write the file and quit vi
Open a browser and access test.php to test your PHP installation: http://ec2-50-17-14-16.compute-1.amazonaws.com/test.php (Use your actual public DNS name/Public IP).








2.mysql connection in ec2


sudo -i
yum install httpd
service httpd start
yum install php php-mysql
service httpd restart
yum update


yum install mysql
yum install mysql-server




mysql  -u admin -p -h database-1.cwarrkrwzrbl.ap-south-1.rds.amazonaws.com -P 3306 


use new




select * from new.table;


3.Xampp 
Go to htdocs and put same php program as above:
localhost:80/test.php




4.IAM
Step1 :-creating IAM user


* Services → IAM -> users → Add user


user Name


Enable console access.
 next I custom password.


uncheck users must create a new password at next sign-in


Attach polices directly.


permission policies


Administrator Access


 Amazon S3 full Access. 
create user [download CSV file] copy paste and paste and login to IAM user. 
Step2: Login IAM user


* Create S3 bucket and html file. 
S3 → create bucket.


name


ACLs enabled.


uncheck) Block all public access. 
 I acknowledge.


add html file.


go to permission 
Read 
show the html implementation by clicking the link.


Dynamo db




Search dynamoDB
Create table
        Table name
        Partition key
        Sort key
Click Create table


Side bar select table
Select created 
        Goto actions - create items
                        Enter values.
Click create item


From side bar select explore items and select your EMP
In scan and query - select query and enter partition key and click run
Select scan and click run.










Ms sql
Make sure you have sql server management studio in pc
Create a new instance with ms sql in rds
Copy the end pt
Open sql management
Server name - end pt
Auth- sql server
Log in cred- admin
Password


Create new database
Give name and save
Select created database and create new table
Insert values 
Retrieve




JDBC data retrieve from my sql
Run an instance in rds connect to my sql create database table etc..
Make sure u have sj folder
Insatll jre and jdk
Click on eclipse 
Click on normal java program icon right corner


File > new > java project> name > finish
Right Click on created project >new> java class fille and click on public static void main




Click on src >.java file
Only package name should be there delete rest of the lines
Edit dbname,password, hostname, and query in below program


import java.sql.*;  


public class JDBClass {
 
public static void main(String args[]){  
try{  
Class.forName("com.mysql.cj.jdbc.Driver");  
String dbName = "RONdb";
    String userName = "admin";
    String password = "admin123";
    String hostname = "rondb.c93fxu82udnu.ap-south-1.rds.amazonaws.com";
    String port ="3306";
    String jdbcUrl = "jdbc:mysql://" + hostname + ":" + port + "/" + dbName + "?user=" + userName + "&password=" + password;
    Connection con = DriverManager.getConnection(jdbcUrl);
    if (con != null) {
         System.out.println("Connected to the database test1");
     }
Statement stmt=con.createStatement();  
ResultSet rs=stmt.executeQuery("select * from RONdb.student");  
while(rs.next())  
System.out.println(rs.getInt(1)+"  "+rs.getString(2));  
con.close();  
}catch(Exception e){ System.out.println(e);}  
}  
}


Right click on progarm > run as java program


JSP program


Run an instance in rds connect to my sql create database table etc..
Make sure u have sj folder
Insatll jre and jdk
Click on eclipse 
Click on java ee program icon right corner
File > new >  dynamic web [roject> name and select tomcat server 8.0 > finish
Right Click on created project >new>  jsp  file
Click on created jsp file >web content> paste progarm in body
Right click> run as >run on server
next> select the project created>finish
If u get error then
Click on window >show view >servers> double click on the tomcat server>
Change the port number of the respective port shown in  the error
Again right click>run as> run on server 


EMR
Create s3 bucket upload 3 files
emr>dashboard>Block public access >off
Create cluster >name and key pair(create a new one in ec2)>create cluster
After getting waiting stage
Go to master security grp> click on inbound rules>check ssh and alltrafic is there or not.
If not present add them.
Click on conncet to master node using ssh
Copy the bold letter and paste it on putty host name
Then ssh >auth>select key pair


Click on steps in emr > add steps> streaming program>choose the path of all 
>Click add
Click on arrow copy the below url and update python 3 places accordingly


[hadoop@ip-172-31-3-1 ~]$ hadoop-streaming -files s3://emrbucketman/wcmapper.py,s3://emrbucketman/wcreducer.py -mapper "python3 wcmapper.py" -reducer "python3 wcreducer.py" -input s3://emrbucketman/input.txt -output s3://emrbucketman/output/


Go to s3 >output>part0002>download >open with notepad